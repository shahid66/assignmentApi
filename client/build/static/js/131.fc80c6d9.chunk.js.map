{"version":3,"file":"static/js/131.fc80c6d9.chunk.js","mappings":"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","sources":["Components/Profile/Profile.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { getProfileData, ProfileUpdateRequest } from '../../API/APIRequest';\r\nimport { getBase64, IsEmail, IsEmpty, IsMobile } from '../helper/Delete/FormHelper/FormHelper';\r\n\r\nconst Profile = () => {\r\n  const[photoBs,setPhotoBs]=useState(\"\")\r\n  let emailRef,firstNameRef,lastNameRef,phoneRef,passwordRef,userImgView,userImgRef=useRef();\r\n  useEffect(()=>{\r\n    getProfileData()\r\n  },[])\r\n  let profile=useSelector((state)=>state.profile.value);\r\n  const [view,setView]=useState('password')\r\n  const handleViewPass=()=>{\r\n    if(view===\"password\"){\r\n      setView('text')\r\n    }else{\r\n      setView('password')\r\n    }\r\n  }\r\n  const PreviewImg=()=>{\r\n    let image=userImgRef.files[0]\r\n    \r\n    getBase64(image).then(result=>{\r\n      userImgView.src=result\r\n      setPhotoBs(result)\r\n    })\r\n  }\r\n  let navigate=useNavigate()\r\n  \r\n  \r\n  const onSubmit=()=>{\r\n    let email=emailRef.value;\r\n    let f_name=firstNameRef.value;\r\n    let l_name=lastNameRef.value;\r\n    let phone=phoneRef.value;\r\n    let password=passwordRef.value;\r\n    let photo=userImgView.src\r\n    \r\n\r\n\r\n   if(IsEmail(email)){\r\n      toast.error('Email required',{\r\n        position: \"bottom-center\"})\r\n    }\r\n    else if(IsEmpty(f_name)){\r\n      toast.error('first name required',{\r\n        position: \"bottom-center\"})\r\n    }else if(IsEmpty(l_name)){\r\n      toast.error('last name required',{\r\n        position: \"bottom-center\"})\r\n    }else if(IsMobile(phone)){\r\n      toast.error('Phone Number required',{\r\n        position: \"bottom-center\"})\r\n    }else if(IsEmpty(password)){\r\n      toast.error('Password required',{\r\n        position: \"bottom-center\"})\r\n    }else{\r\n      console.log(email,f_name,l_name,phone,password, photo)\r\n      ProfileUpdateRequest(email,f_name,l_name,phone,password,photo).then(result=>{\r\n        if(result===true){\r\n          navigate('/')\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className='dashboard'>\r\n    <div className=\"dashboard__wrapper\">\r\n    <div className=\"dashboard__search__task\">\r\n       \r\n        </div>\r\n\r\n        <div className='profile__wrapper'>\r\n    <div className=\"signup__form__wrapper\">\r\n      <div className=\"signup__form\">\r\n          <h2>Profile Update</h2>\r\n          <div className=\"profile__img\">\r\n            <img ref={(input)=>userImgView=input} src={profile.photo} alt=\"\" />\r\n            <input onChange={PreviewImg} ref={(input)=>userImgRef=input} type=\"file\"  placeholder='Email'/>\r\n          </div>\r\n        <div className=\"signup__field\">\r\n          \r\n          <input defaultValue={profile.email} ref={(input)=>emailRef=input} type=\"text\"  placeholder='Email'/>\r\n          <input defaultValue={profile.firstName} ref={(input)=>firstNameRef=input} type=\"text\" placeholder='First Name'/>\r\n          <input defaultValue={profile.lastName} ref={(input)=>lastNameRef=input} type=\"text\"  placeholder='Last Name' />\r\n          <input defaultValue={profile.mobile} ref={(input)=>phoneRef=input} type=\"text\" placeholder='Phone Number'/>\r\n          <input defaultValue={profile.password} ref={(input)=>passwordRef=input} type={view}  placeholder='Password'/> <span onClick={handleViewPass}>view password</span>\r\n          \r\n         \r\n          <input onClick={onSubmit} className='signup__btn' type=\"button\" value=\"Update\" />\r\n         \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n        \r\n\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Profile"],"names":["emailRef","firstNameRef","lastNameRef","phoneRef","passwordRef","userImgView","useState","setPhotoBs","userImgRef","useRef","useEffect","getProfileData","profile","useSelector","state","value","view","setView","navigate","useNavigate","className","ref","input","src","photo","alt","onChange","image","files","getBase64","then","result","type","placeholder","defaultValue","email","firstName","lastName","mobile","password","onClick","f_name","l_name","phone","IsEmail","toast","position","IsEmpty","IsMobile","console","log","ProfileUpdateRequest"],"sourceRoot":""}