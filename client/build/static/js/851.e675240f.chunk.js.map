{"version":3,"file":"static/js/851.e675240f.chunk.js","mappings":"kLAwCA,UAnCgB,WACd,OAA8BA,EAAAA,EAAAA,YAA9B,eAAgBC,GAAhB,YAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAe,MAChB,GAAC,IAIF,IAAMC,GAAYC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAASA,EAAMC,KAAKC,GAApB,IAC9B,OACE,gBAAKC,UAAU,YAAf,UACE,iBAAKA,UAAU,qBAAf,WACE,iBAAKA,UAAU,0BAAf,WACE,gBAAKA,UAAU,sBAAf,UACE,wCAEF,iBAAKA,UAAU,oBAAf,WACA,kBAAQC,SAAU,SAACC,GAAD,OAAKV,EAAaU,EAAEC,OAAOC,MAA3B,EAAmCC,KAAK,OAAOC,YAAY,oBAC7E,2BAAM,cAAGC,MAAM,4BAGnB,gBAAKP,UAAU,qBAAf,SAEIL,EAAYa,KAAI,SAACC,EAAKC,GAAN,OACd,SAAC,IAAD,CAAkBD,KAAMA,GAATC,EADD,UASzB,C,oHC6BD,EA9DiB,SAAC,GAAY,IAAXD,EAAU,EAAVA,KAoCjB,OACE,gBAAKT,UAAU,aAAf,UAEkB,iBAAKA,UAAU,oBAAf,WACE,wBAAKS,EAAKE,SACV,cAAGX,UAAU,oBAAb,SAAkCS,EAAKG,eACvC,iBAAKZ,UAAU,mBAAf,WACE,iBAAKA,UAAU,mBAAf,WACA,0BACA,cAAGA,UAAU,uBACVS,EAAKI,gBAER,wBAAG,cAAGC,QA7BX,SAACC,EAAGC,ICtBlB,SAAsBD,EAAGC,GAEhC,OAAOC,IAAAA,KAAU,CACfN,MAAM,gBACNO,MAAM,SACNC,aAAa,CAACpB,IAAI,MAAMqB,UAAU,YAAYC,SAAS,WAAWC,SAAS,YAC3EC,WAAWP,IACVQ,MAAK,SAACC,GAED,OAAOC,EAAAA,EAAAA,IAAoBX,EAAGU,EAAOrB,OAAOoB,MAAK,SAAAG,GAC9C,OAAOA,CACR,GAET,GAIA,EDMGC,CAAab,EAAGC,GAAQQ,MAAK,SAAAC,IACf,IAATA,IACgB,QAAdhB,EAAKO,QACNtB,EAAAA,EAAAA,IAAe,OACM,cAAde,EAAKO,QACZtB,EAAAA,EAAAA,IAAe,aAEK,aAAde,EAAKO,QACXtB,EAAAA,EAAAA,IAAe,aAGfA,EAAAA,EAAAA,IAAe,YAGpB,GACF,EAamDmC,KAAK,EAAKpB,EAAKqB,IAAIrB,EAAKO,QAAShB,UAAU,iCACvE,wBAEA,cAAGc,QAjDV,SAACC,IEJb,SAAoBA,GAE3B,OAAOE,IAAAA,KAAU,CACfN,MAAM,gBACNoB,KAAK,oCACLC,KAAK,UACLC,kBAAkB,EAClBC,mBAAmB,UACnBC,kBAAkB,OAClBC,kBAAkB,oBACjBZ,MAAK,SAACC,GACP,GAAGA,EAAOY,YACT,OAAOC,EAAAA,EAAAA,IAAkBvB,GAAIS,MAAK,SAAAC,GAC/B,OAAOA,CACR,GAEJ,GAwBA,EFnCGc,CAAWxB,GAAIS,MAAK,SAAAC,IACN,IAATA,IACgB,QAAdhB,EAAKO,QACNtB,EAAAA,EAAAA,IAAe,OACM,cAAde,EAAKO,QACZtB,EAAAA,EAAAA,IAAe,aAEK,aAAde,EAAKO,QACXtB,EAAAA,EAAAA,IAAe,aAGfA,EAAAA,EAAAA,IAAe,YAGpB,GACF,EAiC8CmC,KAAK,EAAKpB,EAAKqB,KAAM9B,UAAU,4CAItD,iBAAMA,UAAU,eAAewC,MAAqB,QAAd/B,EAAKO,OAAgB,CAACyB,WAAW,sBAAoC,cAAdhC,EAAKO,OAAsB,CAACyB,WAAW,sBAAoC,aAAdhC,EAAKO,OAAqB,CAACyB,WAAW,qBAAqB,CAACA,WAAW,oBAAjO,SAAuPhC,EAAKO,gBAKrR,C","sources":["Components/NewTask/NewTask.js","Components/TaskCard/TaskCard.js","Components/helper/UpdateAleart/UpdateAleart.js","Components/helper/Delete/DeleteModel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { SelectByStatus } from '../../API/APIRequest'\r\nimport TaskCard from '../TaskCard/TaskCard'\r\n\r\nconst NewTask = () => {\r\n  const[searchKey,setSearchKey]=useState()\r\n \r\n  useEffect(()=>{\r\n    SelectByStatus(\"New\")\r\n  },[])\r\n\r\n\r\n\r\n  const NewTaskData=useSelector((state)=>state.task.New)\r\n  return (\r\n    <div className='dashboard'>\r\n      <div className=\"dashboard__wrapper\">\r\n        <div className=\"dashboard__search__task\">\r\n          <div className=\"task__status__title\">\r\n            <h2>New Task</h2>\r\n          </div>\r\n          <div className=\"task__search__bar\">\r\n          <input  onChange={(e)=>setSearchKey(e.target.value)} type=\"text\" placeholder='search or type'/>\r\n          <span><i class=\"ri-search-line\"></i></span>\r\n          </div>\r\n        </div>\r\n      <div className=\"todo__task-wrapper\">\r\n        {\r\n          NewTaskData.map((item,i)=>(\r\n            <TaskCard key={i} item={item}/>\r\n          ))\r\n        }\r\n\r\n</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewTask","import React from 'react'\r\nimport { SelectByStatus } from '../../API/APIRequest'\r\nimport { deleteToDo } from '../helper/Delete/DeleteModel'\r\nimport { UpdateAleart } from '../helper/UpdateAleart/UpdateAleart'\r\n\r\nconst TaskCard = ({item}) => {\r\n  \r\n  const DeleteItem=(id)=>{\r\n    deleteToDo(id).then(result=>{\r\n      if(result===true){\r\n        if(item.status===\"New\"){\r\n          SelectByStatus(\"New\")\r\n        }else if(item.status===\"Completed\"){\r\n          SelectByStatus(\"Completed\")\r\n        }\r\n        else if(item.status===\"Progress\"){\r\n          SelectByStatus(\"Progress\")\r\n        }\r\n        else{\r\n          SelectByStatus(\"Canceled\")\r\n        }\r\n      }\r\n    })\r\n  }\r\n  const UpdateStatus=(id,status)=>{\r\n    UpdateAleart(id,status).then(result=>{\r\n      if(result===true){\r\n        if(item.status===\"New\"){\r\n          SelectByStatus(\"New\")\r\n        }else if(item.status===\"Completed\"){\r\n          SelectByStatus(\"Completed\")\r\n        }\r\n        else if(item.status===\"Progress\"){\r\n          SelectByStatus(\"Progress\")\r\n        }\r\n        else{\r\n          SelectByStatus(\"Canceled\")\r\n        }\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"todo__card\">\r\n                      \r\n                      <div className=\"todo__card-bottom\">\r\n                        <h4>{item.title}</h4>\r\n                        <p className='todo__description'>{item.description}</p>\r\n                        <div className='todo__card-other'>\r\n                          <div className='todo__card-icons'>\r\n                          <p>\r\n                          <i className=\"ri-calendar-2-line\"></i>\r\n                            {item.createdDate}\r\n                          </p>\r\n                          <p><i onClick={UpdateStatus.bind(this,item._id,item.status)} className=\"ri-edit-2-line task__edit\"></i></p>\r\n                          <p>\r\n                          \r\n                          <i onClick={DeleteItem.bind(this,item._id)} className=\"ri-delete-bin-5-line task__delete\"></i>\r\n                            \r\n                          </p>\r\n                          </div>\r\n                          <span className='task__status' style={item.status===\"New\"? {background:\"rgb(230, 252, 178)\"}:item.status===\"Completed\"? {background:\"rgb(151, 255, 174)\"}:item.status===\"Progress\"? {background:\"rgb(82, 242, 253)\"}:{background:\"rgb(253, 82, 82)\"}}>{item.status}</span>\r\n                        </div>\r\n                      </div>\r\n          </div>\r\n  )\r\n}\r\n\r\nexport default TaskCard","import Swal from \"sweetalert2\";\r\nimport { UpdateStatusRequest } from \"../../../API/APIRequest\";\r\nexport function UpdateAleart(id,status){\r\n  \r\nreturn Swal.fire({\r\n  title:'Change Status',\r\n  input:'select',\r\n  inputOptions:{New:\"New\",Completed:\"Completed\",Progress:\"Progress\",Canceled:\"Canceled\"},\r\n  inputValue:status\r\n}).then((result)=>{\r\n    \r\n        return UpdateStatusRequest(id,result.value).then(res=>{\r\n           return res;\r\n         })\r\n      \r\n})\r\n\r\n\r\n  \r\n}","\r\nimport Swal from \"sweetalert2\";\r\nimport { TaskDeleteRequest } from \"../../../API/APIRequest\";\r\nexport function deleteToDo(id){\r\n  \r\nreturn Swal.fire({\r\n  title:'Are you sure?',\r\n  text:\"You won't be able to revert this!\",\r\n  icon:\"warning\",\r\n  showCancelButton: true,\r\n  confirmButtonColor:\"#3085d6\",\r\n  cancelButtonColor:\"#d33\",\r\n  confirmButtonText:\"Yes Delete it !\"\r\n}).then((result)=>{\r\n  if(result.isConfirmed){\r\n   return TaskDeleteRequest(id).then(result=>{\r\n      return result\r\n    })\r\n  }\r\n})\r\n\r\n\r\n  // <div className='modalBackground'>\r\n  //       <div className=\"modalContainer\">\r\n  //       <div className=\"titleCloseBtn\">\r\n  //         <button>\r\n  //           X\r\n  //           {id}\r\n  //         </button>\r\n  //       </div>\r\n            \r\n  //           <div className=\"title\">\r\n  //               <h2>Are you sure?</h2>\r\n  //           </div>\r\n  //           <div className=\"body\">\r\n  //               <p>something</p>\r\n  //           </div>\r\n  //           <div className=\"footer\">\r\n  //               <button onClick={()=>console.log('ha')}>No</button>\r\n  //               <button>Yes</button>\r\n  //           </div>\r\n  //       </div>\r\n  //   </div>\r\n}"],"names":["useState","setSearchKey","useEffect","SelectByStatus","NewTaskData","useSelector","state","task","New","className","onChange","e","target","value","type","placeholder","class","map","item","i","title","description","createdDate","onClick","id","status","Swal","input","inputOptions","Completed","Progress","Canceled","inputValue","then","result","UpdateStatusRequest","res","UpdateAleart","bind","_id","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","TaskDeleteRequest","deleteToDo","style","background"],"sourceRoot":""}