{"ast":null,"code":"import axios from \"axios\";\nimport { Hideloader, Showloader } from \"../redux/state-slice/settingsSlice\";\nimport store from \"../redux/store/store\";\nconst BaseUrl = \"http://localhost:8000/api/v1\";\nexport function RegistrationRequest(email, firstName, lastName, mobile, password) {\n  //call start\n  store.dispatch(Showloader());\n  let URL = BaseUrl + \"/register\";\n  let PostBody = {\n    email: email,\n    firstName: firstName,\n    lastName: lastName,\n    mobile: mobile,\n    password: password\n  };\n  return axios.post(URL, PostBody).then(res => {\n    //call end\n    if (res.status === 200) {\n      if (res.data[\"status\"] === \"fail\") {\n        if (res.data[\"data\"][\"keyPattern\"][\"email\"] === 1) {\n          alert(\"Email Already Exist\");\n          return false;\n        } else {\n          store.dispatch(Hideloader());\n          console.log('ha');\n          return true;\n        }\n      }\n    } else {\n      return true;\n    }\n  }).catch(err => {\n    //call end\n    //   store.dispatch(Hideloader());\n    console.log('kasdf');\n    return false;\n  });\n}\n_c = RegistrationRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationRequest\");","map":{"version":3,"names":["axios","Hideloader","Showloader","store","BaseUrl","RegistrationRequest","email","firstName","lastName","mobile","password","dispatch","URL","PostBody","post","then","res","status","data","alert","console","log","catch","err"],"sources":["F:/Ostad/react/MyDashboard/mydashboard/src/API/APIRequest.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Hideloader, Showloader } from \"../redux/state-slice/settingsSlice\";\r\nimport store from \"../redux/store/store\";\r\n\r\nconst BaseUrl = \"http://localhost:8000/api/v1\";\r\n\r\nexport function RegistrationRequest(\r\n  email,\r\n  firstName,\r\n  lastName,\r\n  mobile,\r\n  password\r\n) {\r\n  //call start\r\n  store.dispatch(Showloader());\r\n  let URL = BaseUrl + \"/register\";\r\n  let PostBody = {\r\n    email: email,\r\n    firstName: firstName,\r\n    lastName: lastName,\r\n    mobile: mobile,\r\n    password: password,\r\n  };\r\n\r\n  return axios\r\n    .post(URL, PostBody)\r\n    .then((res) => {\r\n      //call end\r\n      \r\n      if (res.status === 200) {\r\n        \r\n        if (res.data[\"status\"] === \"fail\") {\r\n          if (res.data[\"data\"][\"keyPattern\"][\"email\"] === 1) {\r\n           \r\n            alert(\"Email Already Exist\");\r\n            return false;\r\n          } else {\r\n             store.dispatch(Hideloader());\r\n            console.log('ha')\r\n            return true;\r\n          }\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      //call end\r\n    //   store.dispatch(Hideloader());\r\n    console.log('kasdf')\r\n      return false;\r\n    });\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,oCAAvC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,MAAMC,OAAO,GAAG,8BAAhB;AAEA,OAAO,SAASC,mBAAT,CACLC,KADK,EAELC,SAFK,EAGLC,QAHK,EAILC,MAJK,EAKLC,QALK,EAML;EACA;EACAP,KAAK,CAACQ,QAAN,CAAeT,UAAU,EAAzB;EACA,IAAIU,GAAG,GAAGR,OAAO,GAAG,WAApB;EACA,IAAIS,QAAQ,GAAG;IACbP,KAAK,EAAEA,KADM;IAEbC,SAAS,EAAEA,SAFE;IAGbC,QAAQ,EAAEA,QAHG;IAIbC,MAAM,EAAEA,MAJK;IAKbC,QAAQ,EAAEA;EALG,CAAf;EAQA,OAAOV,KAAK,CACTc,IADI,CACCF,GADD,EACMC,QADN,EAEJE,IAFI,CAEEC,GAAD,IAAS;IACb;IAEA,IAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;MAEtB,IAAID,GAAG,CAACE,IAAJ,CAAS,QAAT,MAAuB,MAA3B,EAAmC;QACjC,IAAIF,GAAG,CAACE,IAAJ,CAAS,MAAT,EAAiB,YAAjB,EAA+B,OAA/B,MAA4C,CAAhD,EAAmD;UAEjDC,KAAK,CAAC,qBAAD,CAAL;UACA,OAAO,KAAP;QACD,CAJD,MAIO;UACJhB,KAAK,CAACQ,QAAN,CAAeV,UAAU,EAAzB;UACDmB,OAAO,CAACC,GAAR,CAAY,IAAZ;UACA,OAAO,IAAP;QACD;MACF;IACF,CAbD,MAaO;MACL,OAAO,IAAP;IACD;EACF,CArBI,EAsBJC,KAtBI,CAsBGC,GAAD,IAAS;IACd;IACF;IACAH,OAAO,CAACC,GAAR,CAAY,OAAZ;IACE,OAAO,KAAP;EACD,CA3BI,CAAP;AA4BD;KA9CehB,mB"},"metadata":{},"sourceType":"module"}