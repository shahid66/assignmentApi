{"ast":null,"code":"var _jsxFileName = \"F:\\\\Ostad\\\\react\\\\MyDashboard\\\\mydashboard\\\\src\\\\Components\\\\AccountRecovery\\\\SendOTP.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useRef } from 'react';\nimport { IsEmail } from '../helper/Delete/FormHelper/FormHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SendOTP = () => {\n  _s();\n\n  let emailRef = useRef();\n\n  const onSubmit = () => {\n    let email = emailRef.value;\n\n    if (IsEmail(email)) {\n      toast.error('email required', {\n        position: \"bottom-center\"\n      });\n    } else {\n      RecoveryEmailRequest(email).then(result => {});\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__form__wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login__form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Enter Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login__field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: input => emailRef = input,\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onClick: onSubmit,\n              className: \"login__btn\",\n              type: \"button\",\n              value: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SendOTP, \"ZDz1MWUU73RG1zwgfNgW3esLxrI=\");\n\n_c = SendOTP;\nexport default SendOTP;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendOTP\");","map":{"version":3,"names":["React","Fragment","useRef","IsEmail","SendOTP","emailRef","onSubmit","email","value","toast","error","position","RecoveryEmailRequest","then","result","input"],"sources":["F:/Ostad/react/MyDashboard/mydashboard/src/Components/AccountRecovery/SendOTP.js"],"sourcesContent":["import React, { Fragment, useRef } from 'react'\r\nimport { IsEmail } from '../helper/Delete/FormHelper/FormHelper'\r\n\r\nconst SendOTP = () => {\r\n    let emailRef=useRef()\r\n    const onSubmit=()=>{\r\n        let email=emailRef.value\r\n        if(IsEmail(email)){\r\n            toast.error('email required',{\r\n              position: \"bottom-center\"})\r\n          }else{\r\n            RecoveryEmailRequest(email).then(result=>{\r\n                \r\n            })\r\n        }\r\n    }\r\n  return (\r\n    <Fragment>\r\n    <div className='login__wrapper'>\r\n      <div className=\"login__form__wrapper\">\r\n        <div className=\"login__form\">\r\n            <h2>Enter Email</h2>\r\n          <div className=\"login__field\">\r\n            <input ref={(input)=>emailRef=input} type=\"text\" />\r\n            \r\n            <input onClick={onSubmit} className='login__btn' type=\"button\" value=\"Next\" />\r\n          </div>\r\n          \r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n      \r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SendOTP"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,OAAT,QAAwB,wCAAxB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAClB,IAAIC,QAAQ,GAACH,MAAM,EAAnB;;EACA,MAAMI,QAAQ,GAAC,MAAI;IACf,IAAIC,KAAK,GAACF,QAAQ,CAACG,KAAnB;;IACA,IAAGL,OAAO,CAACI,KAAD,CAAV,EAAkB;MACdE,KAAK,CAACC,KAAN,CAAY,gBAAZ,EAA6B;QAC3BC,QAAQ,EAAE;MADiB,CAA7B;IAED,CAHH,MAGO;MACHC,oBAAoB,CAACL,KAAD,CAApB,CAA4BM,IAA5B,CAAiCC,MAAM,IAAE,CAExC,CAFD;IAGH;EACJ,CAVD;;EAWF,oBACE,QAAC,QAAD;IAAA,uBACA;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,sBAAf;QAAA,uBACE;UAAK,SAAS,EAAC,aAAf;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEE;YAAK,SAAS,EAAC,cAAf;YAAA,wBACE;cAAO,GAAG,EAAGC,KAAD,IAASV,QAAQ,GAACU,KAA9B;cAAqC,IAAI,EAAC;YAA1C;cAAA;cAAA;cAAA;YAAA,QADF,eAGE;cAAO,OAAO,EAAET,QAAhB;cAA0B,SAAS,EAAC,YAApC;cAAiD,IAAI,EAAC,QAAtD;cAA+D,KAAK,EAAC;YAArE;cAAA;cAAA;cAAA;YAAA,QAHF;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAhCD;;GAAMF,O;;KAAAA,O;AAkCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}