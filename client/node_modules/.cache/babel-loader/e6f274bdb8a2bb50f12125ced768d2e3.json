{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getSearchData, SelectByStatus } from '../../API/APIRequest';\nimport TaskCard from '../TaskCard/TaskCard';\n\nconst NewTask = () => {\n  _s();\n\n  const [searchData, setSearchData] = useState([]);\n  let serchRef = useRef();\n  useEffect(() => {\n    SelectByStatus(\"New\");\n  }, []);\n\n  const searchHandle = () => {\n    let searchKey = serchRef.value;\n\n    if (searchKey.length > 1) {\n      getSearchData(searchKey, \"New\").then(res => {\n        setSearchData(res);\n      });\n    }\n  };\n\n  console.log(searchData);\n  const NewTaskData = useSelector(state => state.task.New);\n\n  if (searchData.length > 0) {} else {}\n};\n\n_s(NewTask, \"OyTP/EAaFHH8RGem5aZ7W3xNR64=\", false, function () {\n  return [useSelector];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useSelector","getSearchData","SelectByStatus","TaskCard","NewTask","searchData","setSearchData","serchRef","searchHandle","searchKey","value","length","then","res","console","log","NewTaskData","state","task","New"],"sources":["F:/Ostad/react/MyDashboard/mydashboard/src/Components/NewTask/NewTask.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { getSearchData, SelectByStatus } from '../../API/APIRequest'\r\nimport TaskCard from '../TaskCard/TaskCard'\r\n\r\nconst NewTask = () => {\r\n  const[searchData,setSearchData]=useState([])\r\n  let serchRef=useRef()\r\n  useEffect(()=>{\r\n    SelectByStatus(\"New\")\r\n  },[])\r\n\r\n  const searchHandle=()=>{\r\n    let searchKey=serchRef.value;\r\n    if(searchKey.length>1){\r\n      getSearchData(searchKey,\"New\").then(res=>{\r\n        \r\n        setSearchData(res)\r\n      })\r\n    }\r\n  }\r\nconsole.log(searchData)\r\n  const NewTaskData=useSelector((state)=>state.task.New)\r\n\r\n  if(searchData.length>0){\r\n\r\n  }else{\r\n\r\n  }\r\n  \r\n  \r\n}\r\n\r\nexport default NewTask"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,sBAA9C;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAK,CAACC,UAAD,EAAYC,aAAZ,IAA2BP,QAAQ,CAAC,EAAD,CAAxC;EACA,IAAIQ,QAAQ,GAACT,MAAM,EAAnB;EACAD,SAAS,CAAC,MAAI;IACZK,cAAc,CAAC,KAAD,CAAd;EACD,CAFQ,EAEP,EAFO,CAAT;;EAIA,MAAMM,YAAY,GAAC,MAAI;IACrB,IAAIC,SAAS,GAACF,QAAQ,CAACG,KAAvB;;IACA,IAAGD,SAAS,CAACE,MAAV,GAAiB,CAApB,EAAsB;MACpBV,aAAa,CAACQ,SAAD,EAAW,KAAX,CAAb,CAA+BG,IAA/B,CAAoCC,GAAG,IAAE;QAEvCP,aAAa,CAACO,GAAD,CAAb;MACD,CAHD;IAID;EACF,CARD;;EASFC,OAAO,CAACC,GAAR,CAAYV,UAAZ;EACE,MAAMW,WAAW,GAAChB,WAAW,CAAEiB,KAAD,IAASA,KAAK,CAACC,IAAN,CAAWC,GAArB,CAA7B;;EAEA,IAAGd,UAAU,CAACM,MAAX,GAAkB,CAArB,EAAuB,CAEtB,CAFD,MAEK,CAEJ;AAGF,CA1BD;;GAAMP,O;UAiBcJ,W;;;KAjBdI,O;AA4BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}