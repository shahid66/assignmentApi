{"ast":null,"code":"var _jsxFileName = \"F:\\\\Ostad\\\\react\\\\MyDashboard\\\\mydashboard\\\\src\\\\Components\\\\AccountRecovery\\\\CreatePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useRef } from 'react';\nimport { toast } from 'react-toastify';\nimport { CreatePasswordRequest } from '../../API/APIRequest';\nimport { getEmail, getOTP } from '../../helper/SessionHelper';\nimport { IsEmpty } from '../helper/Delete/FormHelper/FormHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreatePassword = () => {\n  _s();\n\n  let passRef,\n      confirmPassRef = useRef();\n\n  const onSubmit = () => {\n    let pass = passRef.value;\n    let conf = confirmPassRef.value;\n    let email = getEmail();\n    let otp = getOTP();\n\n    if (IsEmpty(pass)) {\n      toast.error('Password required', {\n        position: \"bottom-center\"\n      });\n    } else if (IsEmpty(conf)) {\n      toast.error('Password Confirm required', {\n        position: \"bottom-center\"\n      });\n    } else if (pass === conf) {\n      toast.error('Password & Confirm Password Must same required', {\n        position: \"bottom-center\"\n      });\n    } else {\n      CreatePasswordRequest(email, otp, pass).then(result => {});\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__form__wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login__form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login__field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              defaultValue: \"\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: input => passRef = input,\n              type: \"text\",\n              placeholder: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: input => confirmPassRef = input,\n              type: \"text\",\n              placeholder: \"Confirmed Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onClick: onSubmit,\n              className: \"login__btn\",\n              type: \"button\",\n              value: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreatePassword, \"/gTOFnzqMUkLu9Y0CPx9pEI186c=\");\n\n_c = CreatePassword;\nexport default CreatePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePassword\");","map":{"version":3,"names":["React","Fragment","useRef","toast","CreatePasswordRequest","getEmail","getOTP","IsEmpty","CreatePassword","passRef","confirmPassRef","onSubmit","pass","value","conf","email","otp","error","position","then","result","input"],"sources":["F:/Ostad/react/MyDashboard/mydashboard/src/Components/AccountRecovery/CreatePassword.js"],"sourcesContent":["import React, { Fragment, useRef } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport { CreatePasswordRequest } from '../../API/APIRequest'\r\nimport { getEmail, getOTP } from '../../helper/SessionHelper'\r\nimport { IsEmpty } from '../helper/Delete/FormHelper/FormHelper'\r\n\r\nconst CreatePassword = () => {\r\n    let passRef,confirmPassRef=useRef()\r\n    const onSubmit=()=>{\r\n      let pass=passRef.value;\r\n      let conf=confirmPassRef.value\r\n      let email=getEmail()\r\n      let otp=getOTP()\r\n\r\n      if(IsEmpty(pass)){\r\n        toast.error('Password required',{\r\n          position: \"bottom-center\"})\r\n      }else if(IsEmpty(conf)){\r\n        toast.error('Password Confirm required',{\r\n          position: \"bottom-center\"})\r\n      }else if(pass===conf){\r\n        toast.error('Password & Confirm Password Must same required',{\r\n          position: \"bottom-center\"})\r\n      }else{\r\n        CreatePasswordRequest(email,otp,pass).then(result=>{\r\n          \r\n        })\r\n      }\r\n\r\n    }\r\n  return (\r\n    <Fragment>\r\n    <div className='login__wrapper'>\r\n      <div className=\"login__form__wrapper\">\r\n        <div className=\"login__form\">\r\n            <h2>Create New Password</h2>\r\n          <div className=\"login__field\">\r\n            <input defaultValue={\"\"} type=\"text\" />\r\n            <input ref={(input)=>passRef=input} type=\"text\" placeholder='New Password'/>\r\n            <input ref={(input)=>confirmPassRef=input} type=\"text\" placeholder='Confirmed Password'/>\r\n            \r\n            <input onClick={onSubmit} className='login__btn' type=\"button\" value=\"Next\" />\r\n          </div>\r\n          \r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n      \r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CreatePassword"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,qBAAT,QAAsC,sBAAtC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,4BAAjC;AACA,SAASC,OAAT,QAAwB,wCAAxB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EACzB,IAAIC,OAAJ;EAAA,IAAYC,cAAc,GAACR,MAAM,EAAjC;;EACA,MAAMS,QAAQ,GAAC,MAAI;IACjB,IAAIC,IAAI,GAACH,OAAO,CAACI,KAAjB;IACA,IAAIC,IAAI,GAACJ,cAAc,CAACG,KAAxB;IACA,IAAIE,KAAK,GAACV,QAAQ,EAAlB;IACA,IAAIW,GAAG,GAACV,MAAM,EAAd;;IAEA,IAAGC,OAAO,CAACK,IAAD,CAAV,EAAiB;MACfT,KAAK,CAACc,KAAN,CAAY,mBAAZ,EAAgC;QAC9BC,QAAQ,EAAE;MADoB,CAAhC;IAED,CAHD,MAGM,IAAGX,OAAO,CAACO,IAAD,CAAV,EAAiB;MACrBX,KAAK,CAACc,KAAN,CAAY,2BAAZ,EAAwC;QACtCC,QAAQ,EAAE;MAD4B,CAAxC;IAED,CAHK,MAGA,IAAGN,IAAI,KAAGE,IAAV,EAAe;MACnBX,KAAK,CAACc,KAAN,CAAY,gDAAZ,EAA6D;QAC3DC,QAAQ,EAAE;MADiD,CAA7D;IAED,CAHK,MAGD;MACHd,qBAAqB,CAACW,KAAD,EAAOC,GAAP,EAAWJ,IAAX,CAArB,CAAsCO,IAAtC,CAA2CC,MAAM,IAAE,CAElD,CAFD;IAGD;EAEF,CArBD;;EAsBF,oBACE,QAAC,QAAD;IAAA,uBACA;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,sBAAf;QAAA,uBACE;UAAK,SAAS,EAAC,aAAf;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEE;YAAK,SAAS,EAAC,cAAf;YAAA,wBACE;cAAO,YAAY,EAAE,EAArB;cAAyB,IAAI,EAAC;YAA9B;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAO,GAAG,EAAGC,KAAD,IAASZ,OAAO,GAACY,KAA7B;cAAoC,IAAI,EAAC,MAAzC;cAAgD,WAAW,EAAC;YAA5D;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE;cAAO,GAAG,EAAGA,KAAD,IAASX,cAAc,GAACW,KAApC;cAA2C,IAAI,EAAC,MAAhD;cAAuD,WAAW,EAAC;YAAnE;cAAA;cAAA;cAAA;YAAA,QAHF,eAKE;cAAO,OAAO,EAAEV,QAAhB;cAA0B,SAAS,EAAC,YAApC;cAAiD,IAAI,EAAC,QAAtD;cAA+D,KAAK,EAAC;YAArE;cAAA;cAAA;cAAA;YAAA,QALF;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CA7CD;;GAAMH,c;;KAAAA,c;AA+CN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}