{"ast":null,"code":"import React,{useRef}from'react';import{useNavigate}from'react-router-dom';import{toast}from'react-toastify';import{CreateTaskRequest}from'../../API/APIRequest';import{IsEmpty}from'../helper/Delete/FormHelper/FormHelper';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CreateTask=function CreateTask(){var navigate=useNavigate();var titleRef,disRef=useRef();var onSubmit=function onSubmit(){var title=titleRef.value;var discription=disRef.value;if(IsEmpty(title)){toast.error('Title required',{position:\"bottom-center\"});}else if(IsEmpty(discription)){toast.error('Description required',{position:\"bottom-center\"});}else{CreateTaskRequest(title,discription).then(function(result){if(result===true){navigate('/newTask');}});}};return/*#__PURE__*/_jsx(\"div\",{className:\"dashboard\",children:/*#__PURE__*/_jsx(\"div\",{className:\"dashboard__wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"create__task-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"create__task-form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"field\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Create New Task\"}),/*#__PURE__*/_jsx(\"input\",{ref:function ref(input){return titleRef=input;},type:\"text\",placeholder:\"Task Name\"}),/*#__PURE__*/_jsx(\"textarea\",{ref:function ref(input){return disRef=input;},name:\"\",id:\"\",cols:\"30\",rows:\"10\",placeholder:\"Task Description\"}),/*#__PURE__*/_jsx(\"p\",{className:\"p_input\",onClick:onSubmit,children:/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\"Submit\"})})]})})})})});};export default CreateTask;","map":{"version":3,"names":["React","useRef","useNavigate","toast","CreateTaskRequest","IsEmpty","CreateTask","navigate","titleRef","disRef","onSubmit","title","value","discription","error","position","then","result","input"],"sources":["F:/Ostad/react/MyDashboard/mydashboard/src/Components/CreateTask/CreateTask.js"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { CreateTaskRequest } from '../../API/APIRequest';\r\nimport { IsEmpty } from '../helper/Delete/FormHelper/FormHelper';\r\n\r\nconst CreateTask = () => {\r\n  let navigate=useNavigate()\r\n  let titleRef,disRef=useRef();\r\n  const onSubmit=()=>{\r\n    let title=titleRef.value;\r\n    let discription=disRef.value;\r\n    if(IsEmpty(title)){\r\n      toast.error('Title required',{\r\n        position: \"bottom-center\"})\r\n    }else if(IsEmpty(discription)){\r\n      toast.error('Description required',{\r\n        position: \"bottom-center\"})\r\n    }else{\r\n      CreateTaskRequest(title,discription).then(result=>{\r\n        if(result===true){\r\n          navigate('/newTask')\r\n        }\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <div className='dashboard'>\r\n    <div className=\"dashboard__wrapper\">\r\n    <div className=\"create__task-wrapper\">\r\n        <div className=\"create__task-form\">\r\n            <div className=\"field\">\r\n                <h4>Create New Task</h4>\r\n            <input ref={(input)=>titleRef=input} type=\"text\" placeholder='Task Name'/>\r\n            <textarea ref={(input)=>disRef=input} name=\"\" id=\"\" cols=\"30\" rows=\"10\" placeholder='Task Description'></textarea>\r\n            <p className='p_input' onClick={onSubmit}><input type=\"button\" value=\"Submit\" /></p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default CreateTask"],"mappings":"AAAA,MAAOA,MAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,iBAAT,KAAkC,sBAAlC,CACA,OAASC,OAAT,KAAwB,wCAAxB,C,wFAEA,GAAMC,WAAU,CAAG,QAAbA,WAAa,EAAM,CACvB,GAAIC,SAAQ,CAACL,WAAW,EAAxB,CACA,GAAIM,SAAJ,CAAaC,MAAM,CAACR,MAAM,EAA1B,CACA,GAAMS,SAAQ,CAAC,QAATA,SAAS,EAAI,CACjB,GAAIC,MAAK,CAACH,QAAQ,CAACI,KAAnB,CACA,GAAIC,YAAW,CAACJ,MAAM,CAACG,KAAvB,CACA,GAAGP,OAAO,CAACM,KAAD,CAAV,CAAkB,CAChBR,KAAK,CAACW,KAAN,CAAY,gBAAZ,CAA6B,CAC3BC,QAAQ,CAAE,eADiB,CAA7B,EAED,CAHD,IAGM,IAAGV,OAAO,CAACQ,WAAD,CAAV,CAAwB,CAC5BV,KAAK,CAACW,KAAN,CAAY,sBAAZ,CAAmC,CACjCC,QAAQ,CAAE,eADuB,CAAnC,EAED,CAHK,IAGD,CACHX,iBAAiB,CAACO,KAAD,CAAOE,WAAP,CAAjB,CAAqCG,IAArC,CAA0C,SAAAC,MAAM,CAAE,CAChD,GAAGA,MAAM,GAAG,IAAZ,CAAiB,CACfV,QAAQ,CAAC,UAAD,CAAR,CACD,CACF,CAJD,EAKD,CACF,CAhBD,CAiBA,mBACE,YAAK,SAAS,CAAC,WAAf,uBACA,YAAK,SAAS,CAAC,oBAAf,uBACA,YAAK,SAAS,CAAC,sBAAf,uBACI,YAAK,SAAS,CAAC,mBAAf,uBACI,aAAK,SAAS,CAAC,OAAf,wBACI,uCADJ,cAEA,cAAO,GAAG,CAAE,aAACW,KAAD,QAASV,SAAQ,CAACU,KAAlB,EAAZ,CAAqC,IAAI,CAAC,MAA1C,CAAiD,WAAW,CAAC,WAA7D,EAFA,cAGA,iBAAU,GAAG,CAAE,aAACA,KAAD,QAAST,OAAM,CAACS,KAAhB,EAAf,CAAsC,IAAI,CAAC,EAA3C,CAA8C,EAAE,CAAC,EAAjD,CAAoD,IAAI,CAAC,IAAzD,CAA8D,IAAI,CAAC,IAAnE,CAAwE,WAAW,CAAC,kBAApF,EAHA,cAIA,UAAG,SAAS,CAAC,SAAb,CAAuB,OAAO,CAAER,QAAhC,uBAA0C,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,QAA3B,EAA1C,EAJA,GADJ,EADJ,EADA,EADA,EADF,CAgBD,CApCD,CAsCA,cAAeJ,WAAf"},"metadata":{},"sourceType":"module"}