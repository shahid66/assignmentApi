{"ast":null,"code":"import axios from \"axios\";\nimport { Hideloader, Showloader } from \"../redux/state-slice/settingsSlice\";\nimport store from \"../redux/store/store\";\nconst BaseUrl = \"http://localhost:8000/api/v1\";\nexport function RegistrationRequest(email, firstName, lastName, mobile, password) {\n  //call start\n  store.dispatch(Showloader());\n  let URL = BaseUrl + \"/register\";\n  let PostBody = {\n    email: email,\n    firstName: firstName,\n    lastName: lastName,\n    mobile: mobile,\n    password: password\n  };\n  return axios.post(URL, PostBody).then(res => {\n    store.dispatch(Hideloader());\n\n    if (res.status === 200) {\n      if (res.data.status === 'fail') {\n        if (res.data.data.keyPattern.email === 1) {\n          alert('exist');\n        } //     alert('try again')\n\n      } else {\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }) //call end\n  //   if (res.status === 200) {\n  //     store.dispatch(Hideloader());\n  //     alert(res.data);\n  //     if (res.data[\"status\"] === \"fail\") {\n  //       if (res.data[\"data\"][\"keyPattern\"][\"email\"] === 1) {\n  //         alert(\"Email Already Exist\");\n  //         return false;\n  //       } else {\n  //         return true;\n  //       }\n  //     }\n  //   } else {\n  //     return true;\n  //    }\n  // })\n  .catch(err => {\n    //call end\n    store.dispatch(Hideloader());\n    alert(\"status code 200 na\");\n    alert(err);\n    return false;\n  });\n}\n_c = RegistrationRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationRequest\");","map":{"version":3,"names":["axios","Hideloader","Showloader","store","BaseUrl","RegistrationRequest","email","firstName","lastName","mobile","password","dispatch","URL","PostBody","post","then","res","status","data","keyPattern","alert","catch","err"],"sources":["F:/Ostad/react/MyDashboard/mydashboard/src/API/APIRequest.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Hideloader, Showloader } from \"../redux/state-slice/settingsSlice\";\r\nimport store from \"../redux/store/store\";\r\n\r\nconst BaseUrl = \"http://localhost:8000/api/v1\";\r\n\r\nexport function RegistrationRequest(\r\n  email,\r\n  firstName,\r\n  lastName,\r\n  mobile,\r\n  password\r\n) {\r\n  //call start\r\n  store.dispatch(Showloader());\r\n  let URL = BaseUrl + \"/register\";\r\n  let PostBody = {\r\n    email: email,\r\n    firstName: firstName,\r\n    lastName: lastName,\r\n    mobile: mobile,\r\n    password: password,\r\n  };\r\n\r\n  return axios\r\n    .post(URL, PostBody)\r\n    .then((res) => {\r\n            store.dispatch(Hideloader());\r\n        if (res.status === 200) {\r\n            \r\n            if(res.data.status==='fail'){\r\n                \r\n                if(res.data.data.keyPattern.email===1){\r\n                    alert('exist')\r\n                    \r\n                }\r\n            //     alert('try again')\r\n            }else{\r\n                return true\r\n            } \r\n        }else{\r\n            return false\r\n        }\r\n    })\r\n      //call end\r\n      \r\n    //   if (res.status === 200) {\r\n    //     store.dispatch(Hideloader());\r\n    //     alert(res.data);\r\n    //     if (res.data[\"status\"] === \"fail\") {\r\n    //       if (res.data[\"data\"][\"keyPattern\"][\"email\"] === 1) {\r\n           \r\n    //         alert(\"Email Already Exist\");\r\n    //         return false;\r\n    //       } else {\r\n             \r\n           \r\n    //         return true;\r\n    //       }\r\n    //     }\r\n    //   } else {\r\n    //     return true;\r\n    //    }\r\n    // })\r\n    .catch((err) => {\r\n      //call end\r\n      store.dispatch(Hideloader());\r\n      alert(\"status code 200 na\")\r\n      alert(err)\r\n    \r\n      return false;\r\n    });\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,oCAAvC;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,MAAMC,OAAO,GAAG,8BAAhB;AAEA,OAAO,SAASC,mBAAT,CACLC,KADK,EAELC,SAFK,EAGLC,QAHK,EAILC,MAJK,EAKLC,QALK,EAML;EACA;EACAP,KAAK,CAACQ,QAAN,CAAeT,UAAU,EAAzB;EACA,IAAIU,GAAG,GAAGR,OAAO,GAAG,WAApB;EACA,IAAIS,QAAQ,GAAG;IACbP,KAAK,EAAEA,KADM;IAEbC,SAAS,EAAEA,SAFE;IAGbC,QAAQ,EAAEA,QAHG;IAIbC,MAAM,EAAEA,MAJK;IAKbC,QAAQ,EAAEA;EALG,CAAf;EAQA,OAAOV,KAAK,CACTc,IADI,CACCF,GADD,EACMC,QADN,EAEJE,IAFI,CAEEC,GAAD,IAAS;IACPb,KAAK,CAACQ,QAAN,CAAeV,UAAU,EAAzB;;IACJ,IAAIe,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;MAEpB,IAAGD,GAAG,CAACE,IAAJ,CAASD,MAAT,KAAkB,MAArB,EAA4B;QAExB,IAAGD,GAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,UAAd,CAAyBb,KAAzB,KAAiC,CAApC,EAAsC;UAClCc,KAAK,CAAC,OAAD,CAAL;QAEH,CALuB,CAM5B;;MACC,CAPD,MAOK;QACD,OAAO,IAAP;MACH;IACJ,CAZD,MAYK;MACD,OAAO,KAAP;IACH;EACJ,CAnBI,EAoBH;EAEF;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EAvCK,CAwCJC,KAxCI,CAwCGC,GAAD,IAAS;IACd;IACAnB,KAAK,CAACQ,QAAN,CAAeV,UAAU,EAAzB;IACAmB,KAAK,CAAC,oBAAD,CAAL;IACAA,KAAK,CAACE,GAAD,CAAL;IAEA,OAAO,KAAP;EACD,CA/CI,CAAP;AAgDD;KAlEejB,mB"},"metadata":{},"sourceType":"module"}