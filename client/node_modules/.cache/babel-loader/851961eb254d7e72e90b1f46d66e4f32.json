{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { setToken, setUserDetails } from \"../helper/SessionHelper\";\nimport { Hideloader, Showloader } from \"../redux/state-slice/settingsSlice\";\nimport store from \"../redux/store/store\";\nconst BaseUrl = \"http://localhost:8000/api/v1\";\nconst AxiosHeader = {};\nexport function RegistrationRequest(email, firstName, lastName, mobile, password) {\n  //call start\n  store.dispatch(Showloader());\n  let URL = BaseUrl + \"/register\";\n  let PostBody = {\n    email: email,\n    firstName: firstName,\n    lastName: lastName,\n    mobile: mobile,\n    password: password\n  };\n  return axios.post(URL, PostBody).then(res => {\n    store.dispatch(Hideloader());\n\n    if (res.status === 200) {\n      if (res.data.status === 'fail') {\n        if (res.data.data.keyPattern.email === 1) {\n          toast.warn(' Email Already Exist', {\n            position: \"bottom-center\",\n            autoClose: 4000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\"\n          });\n          return false;\n        }\n      } else {\n        toast.success('Registration Successfull!', {\n          position: \"bottom-center\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\"\n        });\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }).catch(err => {\n    //call end\n    store.dispatch(Hideloader());\n    return false;\n  });\n}\n_c = RegistrationRequest;\nexport function LoginRequest(email, password) {\n  //call start\n  store.dispatch(Showloader());\n  let URL = BaseUrl + \"/login\";\n  let PostBody = {\n    email: email,\n    password: password\n  };\n  return axios.post(URL, PostBody).then(res => {\n    store.dispatch(Hideloader());\n\n    if (res.status === 200) {\n      setToken(res.data.token);\n      setUserDetails(res.data.data);\n      toast.success('Login Successfull!', {\n        position: \"bottom-center\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\"\n      });\n      return true;\n    } else {\n      toast.error('Email or Password Not Match Api', {\n        position: \"bottom-center\"\n      });\n      return false;\n    }\n  }).catch(err => {\n    //call end\n    store.dispatch(Hideloader());\n    return false;\n  });\n}\n_c2 = LoginRequest;\nexport function CreateTaskRequest(title, description, status) {\n  //call start\n  store.dispatch(Showloader());\n  let URL = BaseUrl + \"/createTask\";\n  let PostBody = {\n    title: title,\n    description: description,\n    status: \"New\"\n  };\n  return axios.post(URL, PostBody).then(res => {\n    store.dispatch(Hideloader());\n\n    if (res.status === 200) {} else {\n      return false;\n    }\n  }).catch(err => {\n    //call end\n    store.dispatch(Hideloader());\n    return false;\n  });\n}\n_c3 = CreateTaskRequest;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RegistrationRequest\");\n$RefreshReg$(_c2, \"LoginRequest\");\n$RefreshReg$(_c3, \"CreateTaskRequest\");","map":{"version":3,"names":["axios","toast","setToken","setUserDetails","Hideloader","Showloader","store","BaseUrl","AxiosHeader","RegistrationRequest","email","firstName","lastName","mobile","password","dispatch","URL","PostBody","post","then","res","status","data","keyPattern","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","success","catch","err","LoginRequest","token","error","CreateTaskRequest","title","description"],"sources":["F:/Ostad/react/MyDashboard/mydashboard/src/API/APIRequest.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { setToken, setUserDetails } from \"../helper/SessionHelper\";\r\nimport { Hideloader, Showloader } from \"../redux/state-slice/settingsSlice\";\r\nimport store from \"../redux/store/store\";\r\n\r\nconst BaseUrl = \"http://localhost:8000/api/v1\";\r\nconst AxiosHeader={}\r\n\r\nexport function RegistrationRequest(\r\n  email,\r\n  firstName,\r\n  lastName,\r\n  mobile,\r\n  password\r\n) {\r\n  //call start\r\n  store.dispatch(Showloader());\r\n  let URL = BaseUrl + \"/register\";\r\n  let PostBody = {\r\n    email: email,\r\n    firstName: firstName,\r\n    lastName: lastName,\r\n    mobile: mobile,\r\n    password: password,\r\n  };\r\n\r\n  return axios\r\n    .post(URL, PostBody)\r\n    .then((res) => {\r\n            store.dispatch(Hideloader());\r\n        if (res.status === 200) {\r\n            \r\n            if(res.data.status==='fail'){\r\n                \r\n                if(res.data.data.keyPattern.email===1){\r\n\r\n                    toast.warn(' Email Already Exist', {\r\n                        position: \"bottom-center\",\r\n                        autoClose: 4000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        theme: \"light\",\r\n                        });\r\n                    return false\r\n                    \r\n                }\r\n           \r\n            }else{\r\n                toast.success('Registration Successfull!', {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"light\",\r\n                    });\r\n                return true\r\n            } \r\n        }else{\r\n            return false\r\n        }\r\n    })\r\n    .catch((err) => {\r\n      //call end\r\n      store.dispatch(Hideloader());   \r\n      return false;\r\n    });\r\n}\r\nexport function LoginRequest(email,password) {\r\n  //call start\r\n  store.dispatch(Showloader());\r\n  let URL = BaseUrl + \"/login\";\r\n  let PostBody = {email: email,password: password};\r\n\r\n  return axios\r\n    .post(URL, PostBody)\r\n    .then((res) => {\r\n            store.dispatch(Hideloader());\r\n        if (res.status === 200) {\r\n            \r\n            setToken(res.data.token);\r\n            setUserDetails(res.data.data) \r\n            toast.success('Login Successfull!', {\r\n                position: \"bottom-center\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: \"light\",\r\n                });\r\n            return true\r\n        }else{\r\n            toast.error('Email or Password Not Match Api',{\r\n                position: \"bottom-center\"})\r\n            return false\r\n        }\r\n    })\r\n    .catch((err) => {\r\n      //call end\r\n      store.dispatch(Hideloader());   \r\n      return false;\r\n    });\r\n}\r\n\r\n\r\nexport function CreateTaskRequest(\r\n    title, description,status,) {\r\n    //call start\r\n    store.dispatch(Showloader());\r\n    let URL = BaseUrl + \"/createTask\";\r\n    let PostBody = {\r\n        title: title,\r\n        description: description,\r\n        status: \"New\"\r\n    };\r\n  \r\n    return axios\r\n      .post(URL, PostBody)\r\n      .then((res) => {\r\n              store.dispatch(Hideloader());\r\n          if (res.status === 200) {\r\n              \r\n              \r\n          }else{\r\n              return false\r\n          }\r\n      })\r\n      .catch((err) => {\r\n        //call end\r\n        store.dispatch(Hideloader());   \r\n        return false;\r\n      });\r\n  }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}