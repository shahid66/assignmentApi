{"ast":null,"code":"var _jsxFileName = \"F:\\\\Ostad\\\\react\\\\MyDashboard\\\\mydashboard\\\\src\\\\Components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { LoginRequest } from '../../API/APIRequest';\nimport { IsEmail, IsEmpty } from '../helper/Delete/FormHelper/FormHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  let emailRef,\n      passRef = useRef();\n\n  const onSubmit = () => {\n    let email = emailRef.value;\n    let password = passRef.value;\n    console.log(email);\n\n    if (IsEmail(email)) {\n      toast.error('email required', {\n        position: \"bottom-center\"\n      });\n    } else if (IsEmpty(password)) {\n      toast.error('Password required', {\n        position: \"bottom-center\"\n      });\n    } else {\n      LoginRequest(email, password).then(result => {\n        if (result === true) {\n          window.location.href = \"/\";\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__form__wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login__form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login__field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: input => emailRef = input,\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: input => passRef = input,\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onClick: onSubmit,\n              className: \"login__btn\",\n              type: \"button\",\n              value: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/forgetpass\",\n              children: \"Forget Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"BlOm0sAsR1vfps2SPToE2H0igTA=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Fragment","useRef","Link","toast","LoginRequest","IsEmail","IsEmpty","Login","emailRef","passRef","onSubmit","email","value","password","console","log","error","position","then","result","window","location","href","input"],"sources":["F:/Ostad/react/MyDashboard/mydashboard/src/Components/Login/Login.js"],"sourcesContent":["import React, { Fragment, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { LoginRequest } from '../../API/APIRequest';\r\nimport { IsEmail, IsEmpty } from '../helper/Delete/FormHelper/FormHelper';\r\n\r\nconst Login = () => {\r\n  let emailRef,passRef=useRef();\r\n  const onSubmit=()=>{\r\n    let email=emailRef.value;\r\n    let password=passRef.value;\r\n    console.log(email)\r\n    if(IsEmail(email)){\r\n      toast.error('email required',{\r\n        position: \"bottom-center\"})\r\n    }else if(IsEmpty(password)){\r\n      toast.error('Password required',{\r\n        position: \"bottom-center\"})\r\n    }else{\r\n      LoginRequest(email,password).then((result=>{\r\n        if(result===true){\r\n          window.location.href=\"/\"\r\n        }\r\n      }))\r\n      \r\n    }\r\n    \r\n  }\r\n  return (\r\n    <Fragment>\r\n    <div className='login__wrapper'>\r\n      <div className=\"login__form__wrapper\">\r\n        <div className=\"login__form\">\r\n            <h2>Sign In</h2>\r\n          <div className=\"login__field\">\r\n            <input ref={(input)=>emailRef=input} type=\"text\" />\r\n            <input ref={(input)=>passRef=input} type=\"text\" />\r\n            <input onClick={onSubmit} className='login__btn' type=\"button\" value=\"Login\" />\r\n          </div>\r\n          <p><Link to='/register'>Sign Up</Link></p>\r\n          <p><Link to='/forgetpass'>Forget Password</Link></p>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n      \r\n    </Fragment>\r\n\r\n  )\r\n}\r\n\r\nexport default Login"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,wCAAjC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAClB,IAAIC,QAAJ;EAAA,IAAaC,OAAO,GAACR,MAAM,EAA3B;;EACA,MAAMS,QAAQ,GAAC,MAAI;IACjB,IAAIC,KAAK,GAACH,QAAQ,CAACI,KAAnB;IACA,IAAIC,QAAQ,GAACJ,OAAO,CAACG,KAArB;IACAE,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;IACA,IAAGN,OAAO,CAACM,KAAD,CAAV,EAAkB;MAChBR,KAAK,CAACa,KAAN,CAAY,gBAAZ,EAA6B;QAC3BC,QAAQ,EAAE;MADiB,CAA7B;IAED,CAHD,MAGM,IAAGX,OAAO,CAACO,QAAD,CAAV,EAAqB;MACzBV,KAAK,CAACa,KAAN,CAAY,mBAAZ,EAAgC;QAC9BC,QAAQ,EAAE;MADoB,CAAhC;IAED,CAHK,MAGD;MACHb,YAAY,CAACO,KAAD,EAAOE,QAAP,CAAZ,CAA6BK,IAA7B,CAAmCC,MAAM,IAAE;QACzC,IAAGA,MAAM,KAAG,IAAZ,EAAiB;UACfC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;QACD;MACF,CAJD;IAMD;EAEF,CAnBD;;EAoBA,oBACE,QAAC,QAAD;IAAA,uBACA;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,sBAAf;QAAA,uBACE;UAAK,SAAS,EAAC,aAAf;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEE;YAAK,SAAS,EAAC,cAAf;YAAA,wBACE;cAAO,GAAG,EAAGC,KAAD,IAASf,QAAQ,GAACe,KAA9B;cAAqC,IAAI,EAAC;YAA1C;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAO,GAAG,EAAGA,KAAD,IAASd,OAAO,GAACc,KAA7B;cAAoC,IAAI,EAAC;YAAzC;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE;cAAO,OAAO,EAAEb,QAAhB;cAA0B,SAAS,EAAC,YAApC;cAAiD,IAAI,EAAC,QAAtD;cAA+D,KAAK,EAAC;YAArE;cAAA;cAAA;cAAA;YAAA,QAHF;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAOE;YAAA,uBAAG,QAAC,IAAD;cAAM,EAAE,EAAC,WAAT;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAH;YAAA;YAAA;YAAA;UAAA,QAPF,eAQE;YAAA,uBAAG,QAAC,IAAD;cAAM,EAAE,EAAC,aAAT;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAH;YAAA;YAAA;YAAA;UAAA,QARF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CA3CD;;GAAMH,K;;KAAAA,K;AA6CN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}